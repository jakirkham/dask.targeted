import pytest

from targeted.graph_manipulations import filter_tree, unfuse_match


def test_unfuse_match():
    """TODO find a better way to get the names of the keys generated by tokenize
    """

    def fun(*args):
        pass

    dsk1 = {'a': ('b-1', ('b-2', -1, 1), 1)} # yapf: disable
    ans = unfuse_match(dsk1, lambda x: x[0] == 'b')

    assert len(ans) == 2

    # get key tht is not 'a'
    key = [key for key in ans if key not in dsk1][0]
    dsk1 = {'a': ('b-1', key, 1), key: ('b-2', -1, 1)}
    assert dsk1 == ans


@pytest.mark.xfail(
    description="need to add remove Targeted dependency in filter_tree")
def test_filter_tree():
    from operator import add, mul

    targ = lambda x: Targeted(x, [])

    dsk1 = {'a': (targ(add),
                  (add, (targ(add), -1, 1), (targ(mul), 10, 10)), 1)} # yapf: disable

    dsk2 = {
        'a': (targ(add), 'b', 1),
        'b': (add, 'c', 'd'),
        'c': (targ(add), -1, 1),
        'd': (targ(mul), 10, 10)
    }

    # count the number of targets
    tree = filter_tree(dsk2, 'a')
    assert len(tree) == 3

    tree = filter_tree(dsk1, 'a')
    assert len(tree) == 3

    tree = filter_tree(dsk2, 'b')
    assert len(tree) == 2
